# -*- coding: utf-8 -*-
"""04_PAD_praca domowa.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1labILT36LAJQlxqrqVua7lUdaL9u1djs

Zadanie 1 (5 pkt)


Wgraj zawartość pliku orders.csv do ramki danych.
Przyjrzyj się danym, wykorzystując poznane metody (describe, info, head) zanalizuj dane.

Następnie:



1. Zamień order_date na format daty. Upewnij się, że w rezultacie data będzie w formacie: rok-miesiąc-dzień;
2. Sprawdź ile i jakie unikalne wartości znajdują się w kolumnie T-shirt category;
3. Wyczyść kolumnę tshirt_category normalizując nazwy produktów. Upewnij się, że dla każdej kategorii funkcjonuje jedna nazwa, np. zamiast white i wh jest tylko jedna wersja white. Skorzystaj z klasy string i metody apply;
4. Rozdziel kolumnę tshirt category na 3 kolumny: tshirt_type, która będzie mówiła o tym czy jest to koszulka, bluza czy coś innego, tshirt_size, która będzie informowała o rozmiarze koszulki, i tshirt_colour, która będzie informowała o kolorze. Skorzystaj z metody apply.
5. Znajdź zamówienia złożone między 31 grudnia 2014 a 2 sierpnia 2016.
"""

import pandas as pd
import numpy as np
dataFrame = pd.read_csv('orders.csv', sep = ',', on_bad_lines = 'warn')
dataFrame

"""1 Zamień order_date na format daty. Upewnij się, że w rezultacie data będzie w formacie: rok-miesiąc-dzień:"""

dataFrame['order_date'] = pd.to_datetime(dataFrame['order_date']).dt.strftime("%Y-%m-%d")
dataFrame

"""2 Sprawdź ile i jakie unikalne wartości znajdują się w kolumnie T-shirt category:"""

unikalne_wartosci = dataFrame['tshirt_category'].unique()
print("Unikalne wartosci kolumny tshirt_category to {x}".format(x = unikalne_wartosci))

ile_unikalne_wartosci = dataFrame['tshirt_category'].nunique()
print("Ilość unikalnych wartości kolumny tshirt_category to {x}".format(x = ile_unikalne_wartosci))

"""3 Wyczyść kolumnę tshirt_category normalizując nazwy produktów. Upewnij się, że dla każdej kategorii funkcjonuje jedna nazwa, np. zamiast white i wh jest tylko jedna wersja white. Skorzystaj z klasy string i metody apply:"""

dataFrame['tshirt_category'] = dataFrame['tshirt_category'].apply(str.strip)
dataFrame['tshirt_category'] = dataFrame['tshirt_category'].apply(str.upper)
dataFrame['tshirt_category'] = dataFrame['tshirt_category'].apply(lambda x: x.replace('WH TSHIRT F', 'WHITE T-SHIRT F'))
dataFrame['tshirt_category'] = dataFrame['tshirt_category'].apply(lambda x: x.replace('WH TSHIRT M', 'WHITE T-SHIRT M'))
dataFrame['tshirt_category'] = dataFrame['tshirt_category'].apply(lambda x: x.replace('BL TSHIRT F', 'BLACK T-SHIRT F'))
dataFrame['tshirt_category'] = dataFrame['tshirt_category'].apply(lambda x: x.replace('BL TSHIRT M', 'BLACK T-SHIRT M'))
dataFrame['tshirt_category'] = dataFrame['tshirt_category'].apply(lambda x: x.replace('HOODIE', 'BLACK HOODIE M'))
dataFrame['tshirt_category'] = dataFrame['tshirt_category'].apply(lambda x: x.replace('TENNIS SHIRT', 'BLACK TENNIS-SHIRT M'))
dataFrame

"""4. Rozdziel kolumnę tshirt category na 3 kolumny: tshirt_type, która będzie mówiła o tym czy jest to koszulka, bluza czy coś innego, tshirt_size, która będzie informowała o rozmiarze koszulki, i tshirt_colour, która będzie informowała o kolorze. Skorzystaj z metody apply."""

dataFrame[['tshirt_type', 'tshirt_size', 'tshirt_colour']] = dataFrame['tshirt_category'].str.split(expand = True)
dataFrame.drop('tshirt_category', axis = 1, inplace = True)
dataFrame

"""5. Znajdź zamówienia złożone między 31 grudnia 2014 a 2 sierpnia 2016"""

dataFrame.loc[dataFrame["order_date"].between('2014-12-31', '2016-08-02')]

"""Zadanie 2 (4 pkt)


Wgraj plik customers.csv do ramki danych. 

Następnie:
1. Wypisz kolumny;
2. Porównaj rozmiar ramki z rozmiarem ramki w zadaniu 1;
3. Zmień nazwę kolumny customerID  na customer_id upewniając się, że dane zmiana zostanie zapisana w pamięci dzięki jednemu z argumentów metody do zmiany nazwy kolumny;
4. Połącz ramkę orders z ramką customers po kolumnie customer_id. Z której metody skorzystasz? Zostaw odpowiedź w komentarzu do zadania w kodzie (np. blok komentarzem ‘’’ ‘’’).

"""

dataFrame2 = pd.read_csv('customers.csv', sep = ',', on_bad_lines = 'warn', engine='python')
dataFrame2

"""1.Wypisz kolumny

"""

list(dataFrame2.columns)

"""2. Porównaj rozmiar ramki z rozmiarem ramki w zadaniu 1"""

import sys
size1 = round(sys.getsizeof(dataFrame)/1024,3)
size2 = round(sys.getsizeof(dataFrame2)/1024,3)
print('Rozmiar ramki z zadania 1 to {x} kilobajtow, natomiast rozmiar ramki z zadania 2 to {y} kilobajtow. Ramka z zadania 1 jest wieksza'.format(x = size1, y = size2))

"""3. Zmień nazwę kolumny customerID na customer_id upewniając się, że dane zmiana zostanie zapisana w pamięci dzięki jednemu z argumentów metody do zmiany nazwy kolumny

"""

dataFrame2.rename(columns={'customerID' : 'customer_id'},inplace = True)
dataFrame2

"""4. Połącz ramkę orders z ramką customers po kolumnie customer_id. Z której metody skorzystasz? Zostaw odpowiedź w komentarzu do zadania w kodzie (np. blok komentarzem ‘’’ ‘’’)."""

"Skorzystałem z metody merge, ponieważ pozwala on na robienie join wiele do wielu lub np wiele do jednego"
newFrame = pd.merge(dataFrame, dataFrame2, on='customer_id')
newFrame

"""Zadanie 3 (1 pkt)

Nową ramkę (połączenie orders i customers) zapisz do pliku csv, ale zapisz bez kolumny z indeksem.

"""

newFrame.to_csv('Orders_customers.csv', sep=',', encoding ='UTF-8', index = False)